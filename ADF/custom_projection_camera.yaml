# AMBF Version: (0.1)
bodies: []
joints: []
cameras: [custom_projection_camera]
high resolution path: ./high_res/
low resolution path: ./low_res/
ignore inter-collision: false
namespace: /ambf/env/

custom_projection_camera:
  namespace: cameras/
  name: custom_projection_camera
  location: {x: 0.0, y: 0.0, z: 0.0}
  look at: {x: -1.0, y: 0.0, z: 0.0}
  up: {x: 0.0, y: 0.0, z: 1.0}
  clipping plane: {near: 2.0135309278350517, far: 1006.7654639175257}
  field view angle: 0.17951634837990105
  monitor: 0
  parent: main_camera
  # multipass: true
  publish image: true
  visible: true
  # preprocessing shaders:
    # path: ./shaders/preprocessing/
    # vertex: shader.vs
    # fragment: shader.fs
  publish image interval: 5   # Publish every nth scene update
  # publish depth: true
  # publish depth noise: {mean: 0.1, std_dev: 0.01, bias: 0.0}
  # publish depth interval: 5   # Publish every nth scene update
  publish image resolution: {width: 640, height: 480}
  # depth compute shaders:
  #    path: ../../../ambf_shaders/depth
  #    vertex: shader.vs
  #    fragment: shader.fs
  # multipass: true
  projection matrix: [ # Copied from existing main_camera's output
    [3.9062, 0.0000, 0.0000, 0.0000],
    [0.0000, 11.1111, 0.0000, 0.0000],
    [0.0000, 0.0000, -1.0040, -4.0351],
    [0.0000, 0.0000, -1.0000, 0.0000]]
  plugins: [
    {
      name: camera_projection_override,
      path: ../build/,
      filename: libcamera_projection_override.so
    }
  ]
